#!/bin/bash
# Script de monitoring RS485 SIMPLE - Affiche les deux unit√©s l'une apr√®s l'autre
# Usage: ./monitor_rs485_simple.sh

echo "=========================================="
echo "RS485 Simple Monitor - K3NG Rotator"
echo "=========================================="
echo ""

# Fonction pour d√©tecter les ports USB
detect_ports() {
    PORTS=($(ls /dev/cu.usbmodem* 2>/dev/null))
    NUM_PORTS=${#PORTS[@]}

    if [ $NUM_PORTS -eq 0 ]; then
        echo "‚ùå Aucun Arduino Nano R4 d√©tect√©!"
        echo ""
        echo "V√©rifie que:"
        echo "  1. Les deux Arduino sont branch√©s en USB"
        echo "  2. Les drivers sont install√©s"
        echo "  3. Les c√¢bles USB fonctionnent"
        exit 1
    fi

    echo "üìç Port(s) USB d√©tect√©(s):"
    for i in "${!PORTS[@]}"; do
        echo "  [$i] ${PORTS[$i]}"
    done
    echo ""
}

# D√©tection des ports
detect_ports

# Si un seul port d√©tect√©
if [ $NUM_PORTS -eq 1 ]; then
    echo "‚ö†Ô∏è  Un seul Arduino d√©tect√©: ${PORTS[0]}"
    echo ""
    echo "Impossible de monitorer les deux unit√©s."
    echo ""
    read -p "Appuie sur ENTR√âE pour monitorer cet Arduino..."

    echo ""
    echo "üîç Monitoring ${PORTS[0]} √† 9600 bauds..."
    echo "   (CTRL+C pour quitter)"
    echo ""

    ~/.platformio/penv/bin/pio device monitor --baud 9600 --port "${PORTS[0]}" --filter time
    exit 0
fi

# Si deux ports ou plus d√©tect√©s
echo "Mode: MONITORING S√âQUENTIEL"
echo ""
echo "Les deux unit√©s seront monitor√©es l'une apr√®s l'autre."
echo "Pour changer d'unit√©, appuie sur CTRL+C puis relance le script."
echo ""

# S√©lection port SHACK
echo "Quelle unit√© est branch√©e sur ${PORTS[0]}?"
echo "  1) SHACK (Remote)"
echo "  2) ANTENNA (Master)"
read -p "Choix: " choice1

if [ "$choice1" == "1" ]; then
    PORT_SHACK="${PORTS[0]}"
    PORT_ANTENNA="${PORTS[1]}"
else
    PORT_SHACK="${PORTS[1]}"
    PORT_ANTENNA="${PORTS[0]}"
fi

echo ""
echo "Configuration:"
echo "  SHACK   ‚Üí ${PORT_SHACK}"
echo "  ANTENNA ‚Üí ${PORT_ANTENNA}"
echo ""

# Menu de s√©lection
while true; do
    echo ""
    echo "=========================================="
    echo "Quelle unit√© veux-tu monitorer?"
    echo "=========================================="
    echo "  1) SHACK (Remote) - ${PORT_SHACK}"
    echo "  2) ANTENNA (Master) - ${PORT_ANTENNA}"
    echo "  3) Les deux en alternance (5 sec chacune)"
    echo "  q) Quitter"
    echo ""
    read -p "Choix: " choice

    case $choice in
        1)
            echo ""
            echo "üè† Monitoring SHACK (Remote)..."
            echo "Port: ${PORT_SHACK}"
            echo "(CTRL+C pour retourner au menu)"
            echo ""
            sleep 1
            ~/.platformio/penv/bin/pio device monitor --baud 9600 --port "${PORT_SHACK}" --filter time
            ;;
        2)
            echo ""
            echo "üì° Monitoring ANTENNA (Master)..."
            echo "Port: ${PORT_ANTENNA}"
            echo "(CTRL+C pour retourner au menu)"
            echo ""
            sleep 1
            ~/.platformio/penv/bin/pio device monitor --baud 9600 --port "${PORT_ANTENNA}" --filter time
            ;;
        3)
            echo ""
            echo "üîÑ Monitoring alternance SHACK ‚Üî ANTENNA"
            echo "(CTRL+C pour retourner au menu)"
            echo ""

            while true; do
                clear
                echo "=========================================="
                echo "üè† SHACK (Remote) - ${PORT_SHACK}"
                echo "=========================================="
                timeout 5s ~/.platformio/penv/bin/pio device monitor --baud 9600 --port "${PORT_SHACK}" --filter time 2>/dev/null

                clear
                echo "=========================================="
                echo "üì° ANTENNA (Master) - ${PORT_ANTENNA}"
                echo "=========================================="
                timeout 5s ~/.platformio/penv/bin/pio device monitor --baud 9600 --port "${PORT_ANTENNA}" --filter time 2>/dev/null
            done
            ;;
        q|Q)
            echo ""
            echo "Au revoir!"
            exit 0
            ;;
        *)
            echo "‚ùå Choix invalide"
            ;;
    esac
done
